#!/usr/bin/env bash
set -e

export_env_dir() {
	local env_dir=$1
	local whitelist_regex=${2:-''}
	local blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH|IFS)$'}
	if [ -d "$env_dir" ]; then
		for e in $(ls $env_dir); do
			echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
			export "$e=$(cat $env_dir/$e)"
			:
		done
	fi
}

env_dir=${3:-}
export_env_dir "$env_dir"

echo "--------> Checking for environment variables"
echo "CREDENTIALS_VAULT: ${CREDENTIALS_VAULT:-not set}"
echo "CREDENTIALS_ITEM: ${CREDENTIALS_ITEM:-not set}"

if [[ -z "$CREDENTIALS_VAULT" ]]; then
  echo "ERROR: CREDENTIALS_VAULT is not set."
  exit 1
fi
if [[ -z "$CREDENTIALS_ITEM" ]]; then
  echo "ERROR: CREDENTIALS_ITEM is not set."
  exit 1
fi
if [[ -z "$OP_SERVICE_ACCOUNT_TOKEN" ]]; then
  echo "ERROR: OP_SERVICE_ACCOUNT_TOKEN is not set."
  exit 1
fi

if command -v op >/dev/null 2>&1; then
  echo "--------> 1Password CLI already installed!"
else
  echo "--------> Installing 1Password CLI..."
  ARCH="amd64" && \
  wget "https://cache.agilebits.com/dist/1P/op2/pkg/v2.31.1/op_linux_${ARCH}_v2.31.1.zip" -O op.zip && \
  unzip -d op op.zip && \
  mv op op_dir && \
  mv op_dir/op . && \
  rm -r op.zip op_dir && \
  chmod +x op
fi

OP_DIR="$(pwd)"
BUILD_DIR=$1
cd $BUILD_DIR

CREDENTIALS_DIR="config"
mkdir -p $CREDENTIALS_DIR

echo "--------> Injecting encrypted credentials..."
$OP_DIR/op document get --force --out-file $CREDENTIALS_DIR/credentials.yml.enc --vault $CREDENTIALS_VAULT $CREDENTIALS_ITEM
if [[ ! -s $CREDENTIALS_DIR/credentials.yml.enc ]]; then
  echo "ERROR: The credentials file is empty or does not exist."
  exit 1
fi

echo "--------> Injecting rails master key..."
$OP_DIR/op read --force --out-file $CREDENTIALS_DIR/master.key op://$CREDENTIALS_VAULT/$CREDENTIALS_ITEM/RAILS_MASTER_KEY
if [[ ! -s $CREDENTIALS_DIR/master.key ]]; then
  echo "ERROR: The rails master key file is empty or does not exist."
  exit 1
fi
